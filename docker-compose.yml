version: '3.8'

services:
    bot:
        container_name: bot_cont
        image: bot_image
        networks:
            - bot-network
        depends_on:
            - db
        environment:
            TOKEN: ${TOKEN}
            DB_DATABASE: ${DB_DATABASE}            
            DB_HOST: ${DB_HOST}
            DB_PORT: ${DB_PORT}
            DB_USER: ${DB_USER}
            DB_PASSWORD: ${DB_PASSWORD}
            RM_HOST: ${RM_HOST}
            RM_PORT: ${RM_PORT}
            RM_USER: ${RM_USER}
            RM_PASSWORD: ${RM_PASSWORD}
        volumes:
            - postgres_logs:/var/log/postgresql

    db:
        container_name: db_cont
        image: db_image
        networks:
            - bot-network
        ports:
            - ${DB_PORT}
        environment:
            DB_REPL_USER: ${DB_REPL_USER}
            DB_REPL_PASSWORD: ${DB_REPL_PASSWORD}
            DB_DATABASE: ${DB_DATABASE}
            DB_PORT: ${DB_PORT}
            POSTGRES_USER: ${DB_USER}
            POSTGRES_PASSWORD: ${DB_PASSWORD}
            POSTGRES_HOST_AUTH_METHOD: "scram-sha-256\nhost replication all 0.0.0.0/0 md5"
        volumes:
            - postgres_logs:/var/log/postgresql        

    db_repl:
        container_name: db_repl_cont
        image: db_repl_image
        networks:
            - bot-network
        ports:
            - ${DB_REPL_PORT}
        environment:
            POSTGRES_USER: ${DB_REPL_USER}
            PGPASSWORD: ${DB_REPL_PASSWORD}    
            DB_REPL_PORT: ${DB_REPL_PORT}
        depends_on:
            - db
        user: postgres
        command: |
            bash -c "
            until pg_basebackup --pgdata=/var/lib/postgresql/data -R --slot=replication_slot --host=${DB_HOST} --port=${DB_PORT}
            do
            echo 'Waiting for primary to connect...'
            rm -rf /var/lib/postgresql/data/*
            sleep 1s
            done
            echo 'Backup done, starting replica...'
            chmod 0700 /var/lib/postgresql/data
            exec postgres
            "
                    
networks:
    bot-network:

volumes:
    postgres_logs:
